
############################# NETWORKS

networks:
  bds_network:
    name: bds_network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.91.0/24

############################# EXTENSIONS

x-common-keys-bds: &common-keys-bds
  networks:
    - bds_network
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped
  environment:
    TZ: $TZ
    PUID: $PUID
    PGID: $PGID
  env_file:
    - .env
  dns:
    - 1.1.1.1
    - 4.4.4.4
    - 8.8.8.8

############################# SERVICES

services:
  nginx:
    <<: *common-keys-bds
    container_name: nginx
    image: nginx:alpine-slim
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ${DATA_DIR}/nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_DIR}:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend

  backend:
    <<: *common-keys-bds
    container_name: backend
    build:
      context: $BACKEND_DIR
      dockerfile: Dockerfile.dev
    command: sh -c "./setup.sh; gunicorn --certfile=/etc/nginx/ssl/certificate.crt --keyfile=/etc/nginx/ssl/private.key project.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ${BACKEND_DIR}:/code
      - ${DATA_DIR}/nginx/ssl:/etc/nginx/ssl:ro

  frontend:
    <<: *common-keys-bds
    container_name: frontend
    build:
      context: $FRONTEND_DIR
      dockerfile: Dockerfile.dev
    command: sh -c "npm install && npm run host"
    volumes:
      - ${FRONTEND_DIR}:/app
    depends_on:
      - backend

  redis:
    <<: *common-keys-bds
    container_name: redis
    image: redis:latest
    expose:
      - $REDIS_PORT
    entrypoint: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - ${DATA_DIR}/redis:/data